name: client CI

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - "client/**"
      - ".github/workflows/client-ci.yml"
  pull_request:
    branches: [main]
    paths:
      - "client/**"
      - ".github/workflows/client-ci.yml"
  release:
    types: [published]

# Prevent multiple deployments running at the same time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_IMAGE_NAME: ghcr.io/brpaz/astro-5-strapi-5-example

permissions:
  packages: write
  contents: write
  id-token: write # Needed for SLSA provenance

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' || (github.event_name == 'release' &&  startsWith(github.event.release.tag_name, 'client-')) }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'client/package.json'

      - name: Install dependencies
        working-directory: client
        run: npm ci

      - name: Lint
        working-directory: client
        run: npm run lint || true # Add proper linting command if available

      - name: Type check
        working-directory: client
        run: npm run typecheck || true # Add proper type checking command if available

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          buildkitd-flags: --debug

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKER_IMAGE_NAME }}
          flavor: |
            latest=auto
            prefix=client-
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=match,pattern=client-(.*),group=1
            type=sha,format=long

      - name: Login to GHCR
        uses: docker/login-action@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Add cache layers to speed up builds
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: client
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          # Enable BuildKit features for better security
          provenance: true
          sbom: true
          build-args: |
            NODE_ENV=production

      # Temp fix for caching
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10
    if: ${{ github.event_name == 'release' &&  startsWith(github.event.release.tag_name, 'client-') }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update Changelog
        uses: stefanzweifel/changelog-updater-action@v1
        with:
          latest-version: ${{ github.event.release.tag_name }}
          release-notes: ${{ github.event.release.body }}
          path-to-changelog: client/CHANGELOG.md

      - name: Commit updated CHANGELOG and README files
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: "chore(release): [skip-ci] ${{ github.event.release.tag_name }}"
          file_pattern: client/CHANGELOG.md

      - name: Trigger release event
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: docker_image_published
          client-payload: |
            {
              "app": "client",
              "tag": "${{ github.event.release.tag_name }}",
              "image": "${{ env.DOCKER_IMAGE_NAME }}",
              "sha": "${{ github.sha }}",
              "ref": "${{ github.ref }}"
            }
