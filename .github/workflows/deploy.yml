name: Deploy

on:
  workflow_dispatch:
    inputs:
      app:
        description: "Application to deploy"
        required: true
        default: "server"
        type: choice
        options:
          - server
          - client
      tag:
        description: "Tag to deploy"
        required: true
        default: "latest"
      environment:
        description: "Environment to deploy"
        required: true
        default: "production"
        type: choice
        options:
          - production
  repository_dispatch:
    types: [deploy]

env:
  PYTHON_VERSION: "3.12"
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      app: ${{ github.event_name == 'workflow_dispatch' && inputs.app || github.event.client_payload.app }}
      tag: ${{ github.event_name == 'workflow_dispatch' && inputs.tag || github.event.client_payload.tag }}
      environment: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'production' }}
  deploy:
    runs-on: ubuntu-latest
    needs: prepare
    env:
      ANSIBLE_PRIVATE_KEY_FILE: ~/.ssh/deploy_key
      ANSIBLE_VAULT_PASSWORD_FILE: ${{ github.workspace }}/deploy/.vault_pass.txt
      ANSIBLE_INVENTORY: inventory/${{ needs.prepare.outputs.environment }}/inventory.ini
    environment:
      name: ${{ needs.prepare.outputs.environment }}
      url: ${{ needs.prepare.outputs.app == 'client' && 'https://monorepodeploy.brunopaz.xyz' || 'https://strapi-monorepodeploy.brunopaz.xyz' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"

      - name: Install Python dependencies
        working-directory: ./deploy
        run: |
          pip install -r deploy/requirements.txt

      - name: Install Galaxy Roles
        working-directory: ./deploy
        run: |
          ansible-galaxy install -r requirements.yml
          ansible-galaxy collection install requirements.yml

      - name: Setup SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
          SSH_DEPLOY_KEY_FILE: ${{ env.ANSIBLE_PRIVATE_KEY_FILE }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > $SSH_DEPLOY_KEY_FILE
          chmod 600 $SSH_DEPLOY_KEY_FILE

      - name: Run Ansible playbook
        working-directory: ./deploy
        run: |
          ansible-playbook server.yml
            --extra-vars "app=${{ needs.prepare.outputs.app }} version=${{ needs.prepare.outputs.tag }} env=${{ needs.prepare.outputs.environment }}"
